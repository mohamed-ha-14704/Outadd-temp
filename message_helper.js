const ERROR_TYPES={api_error:"API_FAILED",ssl_error:"SSL_ERROR",generic_error:"GENERIC_ERROR"};class Attachment{constructor(a,b,c){this.name=a;this.content=b;this.contentFormat=c}}
class Message{constructor(a,b){this.version=1;this.messageType=a;this.sender=this.bodyTextFormat=this.body=this.subject="";this.sentTime=(new Date).getTime();this.attachments=[];this.cachedAttachmentIdList=[];this.recipients=[];this.location="";this.metaData={};this.isBodyChangedInSuccessiveAPICalls=!1;"undefined"!=typeof b&&Array.isArray(b)&&(this.cachedAttachmentIdList=b)}addAttachment(a,b,c){a=new Attachment(a,b,c);this.attachments.push(a)}}
class AttachmentCacheRequest{constructor(a,b,c){this.id=a;this.fileName=b;this.fileSize=c}}
class MessageGenerator{constructor(a){this.mailItem=a}getMessageAttributesFunctionListWithoutAttachment(a){if("message"===a)return[this.setSubject,this.setSender,this.setBody,this.setTORecipients,this.setCCRecipients,this.setBCCRecipients,this.setMetaDataForMIPLabel];if("appointment"===a)return[this.setSubject,this.setOrganizer,this.setBody,this.setAppointmentOptionalRecipients,this.setAppointmentRequiredRecipients,this.setLocation,this.setMetaDataForMIPLabel]}async generateMessageWithoutAttachment(a){let b=
new Message(a),c=[];a=this.getMessageAttributesFunctionListWithoutAttachment(a);for(let d=0;d<a.length;d++)c.push(this.executeCallback(a[d],b));await Promise.all(c);return b}async generateMessage(a,b){b=new Message(a,b);let c=[];a=this.getMessageAttributesFunctionListWithoutAttachment(a);a.push(this.setAttachments);for(let d=0;d<a.length;d++)c.push(this.executeCallback(a[d],b));await Promise.all(c);return b}executeCallback(a,b){return new Promise((c,d)=>{a.call(this,c,d,b)})}setMetaDataForMIPLabel(a,
b,c){0==outlookJSAPIHelper.isMIPFunctionalitySupported()&&a();Office.context.sensitivityLabelsCatalog.getIsEnabledAsync(d=>{d.status===Office.AsyncResultStatus.Succeeded&&1==d.value?this.mailItem.sensitivityLabel.getAsync(e=>{e.status===Office.AsyncResultStatus.Succeeded&&(1==Util.isValidGUID(e.value)?c.metaData.mipLabelId=e.value:(e=Util.convertStringToGuidFormat(e.value),null!=e&&(c.metaData.mipLabelId=e)));a()}):a()})}setSubject(a,b,c){this.mailItem.subject.getAsync(function(d){d.status===Office.AsyncResultStatus.Succeeded?
(c.subject=d.value,a()):b(d.error)})}setSender(a,b,c){this.mailItem.from.getAsync(function(d){d.status===Office.AsyncResultStatus.Succeeded?(c.sender=d.value.emailAddress,a()):b(d.error)})}getBody(a,b){return new Promise(function(c,d){b.body.getAsync(a,function(e){e.status===Office.AsyncResultStatus.Succeeded?c(e.value):d(e.error)})})}async setBody(a,b,c){let d=Office.CoercionType.Text;if("Win32"===navigator.platform||officeHostName===OFFICE_HOST_NAMES.OUTLOOK_WEB_ACCESS)try{d=await this.getBodyTypeAsync(this.mailItem)}catch(e){logMessage("failed to get the body type. Defaulting to text. Error:"+
e)}c.bodyTextFormat=d;try{let e=await this.getBody(d,this.mailItem),f=await this.getBody(d,this.mailItem);e===f?c.isBodyChangedInSuccessiveAPICalls=!1:(logMessage("Body contents are changed in successive calls."),c.isBodyChangedInSuccessiveAPICalls=!0);c.body=f;a()}catch(e){logMessage("failed to get the body. Error:"+e),b(e)}}getBodyTypeAsync(a){return new Promise(function(b,c){a.body.getTypeAsync(function(d){d.status===Office.AsyncResultStatus.Succeeded?b(d.value):c(d.error)})})}addRecipientsDetails(a,
b,c,d){c.getAsync(function(e){e.status===Office.AsyncResultStatus.Succeeded?(e.value.forEach(function(f){f.emailAddress?d.push(f.emailAddress):d.push(f.displayName)}),a()):b(e.error)})}setTORecipients(a,b,c){this.addRecipientsDetails(a,b,this.mailItem.to,c.recipients)}setCCRecipients(a,b,c){this.addRecipientsDetails(a,b,this.mailItem.cc,c.recipients)}setBCCRecipients(a,b,c){this.addRecipientsDetails(a,b,this.mailItem.bcc,c.recipients)}setOrganizer(a,b,c){this.mailItem.organizer.getAsync(function(d){d.status===
Office.AsyncResultStatus.Succeeded?(c.sender=d.value.emailAddress,a()):b(d.error)})}setLocation(a,b,c){this.mailItem.location.getAsync(function(d){d.status===Office.AsyncResultStatus.Succeeded?(c.location=d.value,a()):b(d.error)})}setAppointmentOptionalRecipients(a,b,c){this.addRecipientsDetails(a,b,this.mailItem.optionalAttendees,c.recipients)}setAppointmentRequiredRecipients(a,b,c){this.addRecipientsDetails(a,b,this.mailItem.requiredAttendees,c.recipients)}setAttachments(a,b,c){this.mailItem.getAttachmentsAsync(d=>
{if(d.status===Office.AsyncResultStatus.Succeeded){let e=d.value;if(0<e.length){let f=[];for(let g=0;g<e.length;g++)d=e[g],"cloud"===d.attachmentType||c.cachedAttachmentIdList.includes(d.id)||f.push(this.processAttachment(d,c,this.mailItem));0==f.length?a():Promise.all(f).then(()=>{a()}).catch(g=>{b(g)})}else a()}else b(d.error)})}processAttachment(a,b,c){return new Promise(function(d,e){c.getAttachmentContentAsync(a.id,f=>{if(f.status===Office.AsyncResultStatus.Succeeded){f=f.value;let g="";switch(f.format){case Office.MailboxEnums.AttachmentContentFormat.Base64:g=
f.content;break;case Office.MailboxEnums.AttachmentContentFormat.Eml:g=f.content;break;case Office.MailboxEnums.AttachmentContentFormat.ICalendar:g=f.content}0!==g.length&&b.addAttachment(a.name,g,f.format);d()}else e(f.error)})})}}class AddInError{constructor(a,b,c){this.type=a;this.name=b;this.description=c}}class ErrorMessage{constructor(){this.errors=[];this.eventtime=(new Date).getTime()}addError(a){this.errors.push(a)}};
